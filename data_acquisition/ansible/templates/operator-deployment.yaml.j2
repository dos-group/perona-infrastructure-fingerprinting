apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: perona-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: perona-role-cluster
rules:
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
  # kubestone
  - apiGroups: [perf.kubestone.xridge.io]
    resources: ["*"]
    verbs: ["*"]
  # chaosmesh
  - apiGroups: [chaos-mesh.org]
    resources: ["*"]
    verbs: ["*"]
  # allow access to nodes
  - apiGroups: [""]
    resources: [nodes]
    verbs: [list, watch, get]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: perona-role-namespaced
rules:
  - apiGroups: [kopf.dev]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kubestone
  name: kubestone-role-namespaced
rules:
  # kubestone
  - apiGroups: [perf.kubestone.xridge.io]
    resources: ["*"]
    verbs: ["*"]
  # chaosmesh
  - apiGroups: [chaos-mesh.org]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: perona-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: perona-role-cluster
subjects:
  - kind: ServiceAccount
    name: perona-account
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: default
  name: perona-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: perona-role-namespaced
subjects:
  - kind: ServiceAccount
    name: perona-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: kubestone
  name: kubestone-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubestone-role-namespaced
subjects:
  - kind: ServiceAccount
    name: perona-account
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: perona-service
  namespace: default
spec:
  type: NodePort
  ports:
  - name: perona-api
    nodePort: 31313
    port: 8000
    targetPort: perona-api
  selector:
    app: perona-operator
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: perona-pv-claim
  namespace: default
  labels:
    type: local
spec:
  storageClassName: {{ cluster_storage_class_name }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: perona-operator
  namespace: default
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: perona-operator
  template:
    metadata:
      labels:
        app: perona-operator
    spec:
      serviceAccountName: perona-account
{% if persistent_db_file is not none %}
      initContainers:
      - name: copy
        image: busybox:1.28
        command: ["/bin/sh", "-c", "until [ -f /tmp/db.sqlite ]; do echo waiting for file; sleep 5; done;"]
        volumeMounts:
        - name: perona-pv-storage
          mountPath: /tmp
{% endif %}
      containers:
      - name: perona-operator
        image: {{ operator_image_name }}:{{ operator_image_tag }}
{% if execution_environment != 'kind' %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        env:
        - name: PROMETHEUS_ENDPOINT
          value: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090
        - name: PERONA_API_PORT
          value: "8000"
        ports:
        - containerPort: 8000
          name: perona-api
        volumeMounts:
        - name: perona-pv-storage
          mountPath: /tmp
      volumes:
        - name: perona-pv-storage
          persistentVolumeClaim:
            claimName: perona-pv-claim
      nodeSelector:
        mynodetype: supporter
